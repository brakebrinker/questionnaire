<?php

use Drupal\Core\Block\BlockPluginInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\webform\Entity\WebformSubmission;

// use Drupal\user\Entity\User;


// hook for submition webform anketa_k_dkr
function questionnaire_hooks_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id == 'webform_submission_anketa_k_dkr_add_form') {
    foreach (array_keys($form['actions']) as $action) {
      if ($action != 'preview' && isset($form['actions'][$action]['#type']) && $form['actions'][$action]['#type'] === 'submit') {
        $form['actions'][$action]['#validate'][] = 'questionnaire_hooks_form_validate';
      }
    }
    // $form['#validate'][] = 'questionnaire_hooks_form_validate';
  }
}

// filling fields id_timlida and id_sotrudnika on submition webform
function questionnaire_hooks_form_validate(&$form, FormStateInterface $form_state) {
  $user_roles = \Drupal::currentUser()->getRoles();
  $user_id = \Drupal::currentUser()->id();
  $user_name = \Drupal::currentUser()->getUsername();
  $user_email = \Drupal::currentUser()->getEmail();

  if (in_array("team_lider", $user_roles)) {
    $filling_field_id_timlida = $form_state->getValue('id_timlida');
    $filling_field_name_timlida = $form_state->getValue('name_timlida');
    $filling_field_email_timlida = $form_state->getValue('email_timlida');
    $filling_field_email_sotrudnika_from_teamlead = $form_state->getValue('email_sotrudnika');
    $filling_field_entity_sotrudnika = $form_state->getValue('team_entity_sotrudnik');

    $user_from_uid = user_load($filling_field_entity_sotrudnika);
    $email_sotrudnika_from_field = $user_from_uid->getEmail();

    if (!$filling_field_id_timlida) {
      $form_state->setValue('id_timlida', $user_id);
    }

    if (!$filling_field_name_timlida) {
      $form_state->setValue('name_timlida', $user_name);
    }

    if (!$filling_field_email_timlida) {
      $form_state->setValue('email_timlida', $user_email);
    }

    if (!$filling_field_email_sotrudnika_from_teamlead) {
      $form_state->setValue('email_sotrudnika', $email_sotrudnika_from_field);
    }
  }

  if (in_array("employee", $user_roles)) {
    $filling_field_id_sotrudnika = $form_state->getValue('id_sotrudnika');
    $filling_field_name_sotrudnika = $form_state->getValue('name_sotrudnika');
    $filling_field_email_sotrudnika = $form_state->getValue('email_sotrudnika');

    if (!$filling_field_id_sotrudnika) {
      $form_state->setValue('id_sotrudnika', $user_id);
    }

    if (!$filling_field_name_sotrudnika) {
      $form_state->setValue('name_sotrudnika', $user_name);
    }

    if (!$filling_field_email_sotrudnika) {
      $form_state->setValue('email_sotrudnika', $user_email);
    }

  }
  // \Drupal::logger(' id_timlida')->notice('id_timlida 19 submit ');
}

// hook for webform_block
function questionnaire_hooks_block_view_webform_block_alter(array &$build, BlockPluginInterface $block) {
  if ($block->getBaseId() === 'webform_block') {
    $build['#pre_render'][] = '_questionnaire_hooks_block_webform_block_prerender';
  }
}

// checking last create questionnaire
function _questionnaire_hooks_block_webform_block_prerender(array $build) {
    $current_user_id = \Drupal::currentUser()->id();
    $current_user_roles = \Drupal::currentUser()->getRoles();

    $expirience_questionnaire_period = 15811200; // 15811200 - half of the year
    $expirience_questionnaire_date = time() - $expirience_questionnaire_period;

    $show_questionnaire = true;
    $msg = '';

    $submission_query = \Drupal::database()->select('webform_submission', 'ws');
    $submission_query->fields('ws', ['sid']);

    if (in_array("employee", $current_user_roles)) {
//
        $condition_or = new \Drupal\Core\Database\Query\Condition('OR');
        $condition_or->condition('ws.uid', $current_user_id);
        $condition_or->condition('wsd.value', $current_user_id);
//
        $submission_query->join('webform_submission_data', 'wsd', 'wsd.sid = ws.sid');
//        $submission_query = \Drupal::database()->select('webform_submission_data', 'wsd');
//    $submission_query->fields('wsd', ['sid']);
//        $condition_or_fields = new \Drupal\Core\Database\Query\Condition('OR');
//        $condition_or_fields->condition('wsd.name', 'team_entity_sotrudnik');
//        $condition_or_fields->condition('wsd.name', 'id_sotrudnika');

//        $submission_query->where('ws.created < :entity_s', [':entity_s' => $expirience_questionnaire_date]);
//        $submission_query->condition('ws.created', $expirience_questionnaire_date , '>');
        $submission_query->condition($condition_or);
        $submission_query->condition('wsd.name', 'team_entity_sotrudnik');
//        $submission_query->condition('wsd.value', $current_user_id);
//        $submission_query->condition('wsd.name', 'id_sotrudnika');
//        $submission_query->condition($condition_or_fields);

//        $submission_query->addExpression('COUNT(wsd.sid)', 'count');
        $submission_query->orderBy('ws.created', 'DESC');
//        $submission_query->groupBy('ws.sid');

        $results = $submission_query->execute()->fetchAssoc();
        print_r($results);

        if (!empty($results)) {
            $webform_submission = WebformSubmission::load($results['sid']);
            $submission_data_fields = $webform_submission->getData();
            echo '</br>id_empl: ' . $submission_data_fields['id_sotrudnika'];
            echo '</br>date_create: ' . date('d.m.Y', $webform_submission->getCreatedTime()) . 'date_experience: ' . date('d.m.Y', $expirience_questionnaire_date);
            if (empty($submission_data_fields['id_sotrudnika'])) {
                echo '</br>is_empty!</br>';
            }
            if ($webform_submission->getCreatedTime() <= $expirience_questionnaire_date) {
                echo '</br>date_create menshe than exp_date </br>';
            }

            if ($webform_submission->getCreatedTime() > $expirience_questionnaire_date && empty($submission_data_fields['id_sotrudnika'])) {
                $show_questionnaire = false;
                $webform_update_url = $webform_submission->getTokenUrl()->toString();
                echo $webform_update_url;
                $msg = 'Вы уже заполняли анкету в ближайшие пол года. Можете отредактировать <a href="' . $webform_update_url . '">предыдущую анкету</a>.';
            }
        }
    }

    if ($show_questionnaire) {
        return $build;
    } else {
        drupal_set_message(t($msg), 'error');
    }
}

